import discord
from discord.ext import commands
import yaml
#import AutoRole

class XpScore(commands.Cog):
	def __init__(self, bot):
		self.bot = bot
	
	filename = 'xp_stats.yaml'
	prices = {'send': 5, 'react': 1}
	
	def isMeme(self, message):
		memeFlags = ['twitter.com', 'discordapp', 'tenor.com', 'tumblr', 'youtube.com']
		for flag in memeFlags:
			if message.attachments or flag in message.content:
				return True
		return False

	def read(self, readFilename):
		try:
			with open(readFilename) as f:
				return yaml.load(f, Loader=yaml.FullLoader)
		except FileNotFoundError:
			return None

	def write(self, data, writeFilename):
		with open(writeFilename, 'w') as f:
			data = yaml.dump(data, f)
		return

	# ---------------------------------------------------------------------------------------------------------
	'''
	@commands.command()
	async def xp(self, ctx, user: discord.Member = None):
	'''
		
	# ---------------------------------------------------------------------------------------------------------

	@commands.Cog.listener()
	async def on_message(self, message): # When you post a meme...
		if self.isMeme(message):
			data = self.read(self.filename)
			if data == None:
				data = {}
			if message.author.id not in data:
				data[message.author.id] = 0
			data[message.author.id]+=self.prices['send']
			self.write(data, self.filename)

	@commands.Cog.listener() # Handle reacitons
	async def on_raw_reaction_add(self, ctx):
		if ctx.user_id == self.bot.id: # Ignore bot's reactions
			return
		channel = self.bot.get_channel(ctx.channel_id) # get reacted messages' channel
		message = await channel.fetch_message(ctx.message_id) # get reacted message
		reactor_id = ctx.user_id # debastardize variable name

		if self.isMeme(message): # if reacted message is meme
			if message.author.id != reactor_id: # if msg was reacted by NOT the author
				data = self.read(self.filename)
				if ctx.user_id in data:
					if data[ctx.user_id] >= self.prices['react']:
						if ctx.emoji == self.bot.get_emoji(872062376105607168) or ctx.emoji == self.bot.get_emoji(736841294055473212): # Upvote
							data[ctx.user_id]-=self.prices['react']
							if message.author.id not in data:
								data[message.author.id] = 0
							data[message.author.id]+=self.prices['react']
					else:
						print('no')
						cost = self.prices['react']
						await channel.send(f'Reacting costs `{cost} XP` {ctx.member.name}!')
						await message.remove_reaction(self.bot.get_emoji(872062376105607168), ctx.member) # Upvote)
						await message.remove_reaction(self.bot.get_emoji(736841294055473212), ctx.member) # Downvote)
				self.write(data, self.filename)


def setup(bot):
	bot.add_cog(XpScore(bot))